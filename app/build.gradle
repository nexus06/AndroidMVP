apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "android.puliware.es.baseandroidmvp"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    final DAGGER_VERSION = '2.13'
    final AUTO_VALUE_VERSION = '1.5'
    final RxANDROID_VERSION = '2.0.1'
    final MOCKITO_VERSION = '2.8.9'
    final ESPRESSO_VERSION = '2.2.1'
    final HAMCREST_VERSION = '1.3'
    final RUNNER_VERSION = '0.4'
    final SUPPORT_LIBRARY_VERSION = '26.+'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    testCompile 'junit:junit:4.12'

    //AUTOVALUE https://github.com/google/auto/blob/master/value/userguide/index.md
    compileOnly "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"
    annotationProcessor "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"

    //DAGGER2
    //compile "com.google.dagger:dagger-android:$DAGGER_VERSION"// if you don't use the support libraries
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    compile "com.google.dagger:dagger-android-support:$DAGGER_VERSION"

    //RxAndroid
    compile "io.reactivex.rxjava2:rxandroid:$RxANDROID_VERSION"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.8'

    //TESTING WITH MOCKITO AND ESPRESSO
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"
    // Instrumentation test dependencies
    androidTestCompile mockito
    androidTestCompile "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
}
